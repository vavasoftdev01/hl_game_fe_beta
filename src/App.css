.chart-container {
  @apply w-full h-[400px];
}

/* betting form */
.btn-uniform {
  width: calc(100% / 7 - 0.5rem); /* Equal width for 7 buttons, accounting for gap */
  min-width: 4rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Remove responsive width adjustments since buttons will stay inline */

@media (max-width: 640px) { /* max-sm breakpoint */
  .btn-uniform {
    width: calc(100% / 3 - 0.5rem); /* 3 buttons per row on small screens */
  }
}

@media (min-width: 641px) and (max-width: 1024px) { /* sm:max-lg breakpoint */
  .btn-uniform {
    width: calc(100% / 5 - 0.5rem); /* 5 buttons per row on medium screens */
  }
}

/* Dynamic Panel */
@keyframes slideInFromLeft {
  0% { transform: translateX(-100%); opacity: 0; }
  100% { transform: translateX(0); opacity: 1; }
}
.animate-slide-in-left {
  animation: slideInFromLeft 0.1s ease-in forwards;
}

@keyframes slideInFromRight {
  0% { transform: translateX(100%); opacity: 0; }
  100% { transform: translateX(0); opacity: 1; }
}
.animate-slide-in-right {
  animation: slideInFromRight 0.1s ease-in forwards;
}

/* Define the keyframes for the zoom in/out and fade-in animation */
@keyframes zoomInThenOut {
    0% {
      opacity: 0;
      transform: scale(0.8); /* Start smaller and invisible */
    }
    50% {
      opacity: 1;
      transform: scale(1.1); /* Zoom slightly larger than final size, fully visible */
    }
    100% {
      opacity: 1;
      transform: scale(1); /* Settle back to original size, fully visible */
    }
}

/* Apply the animation using a custom class */
.animate-on-load {
  animation: zoomInThenOut 0.5s ease-in-out forwards; /* Name, duration, timing, fill-mode */
    /*
      * `forwards` ensures the element stays in its final animated state
      * after the animation completes.
      * `ease-in-out` provides a smooth acceleration and deceleration.
      */
}

/* app.jsx > timer status */
@keyframes bounceAndSlideIn {
  0% {
    opacity: 0;
    transform: translateY(-100px); /* Start 100px above and invisible */
  }
  40% {
    opacity: 1;
    transform: translateY(10px); /* Overshoot slightly below final position */
  }
  70% {
    transform: translateY(-5px); /* Bounce back up slightly */
  }
  100% {
    opacity: 1;
    transform: translateY(0); /* Settle at final position */
  }
}

@keyframes slideLeft1 {
  0% {
      opacity: 1; /* Stay fully opaque */
      transform: translateX(2000px); /* Start at current position */
  }
  100% {
      opacity: 1; /* Stay fully opaque as it slides out */
      transform: translateX(-500px); /* Slide far left */
  }
}

.animate-sequence {
  /* First animation: bounceAndSlideIn (duration 1s, delay 0.2s) */
  /* Second animation: slideLeft (duration 0.8s, starts after 1s + 0.2s = 1.2s, plus a small gap) */
  animation:
    bounceAndSlideIn 1s ease-out forwards;
     
}


.vavascrollbar::-webkit-scrollbar {
  height: 5px;
  width: 5px;
  cursor: pointer;
}
.vavascrollbar::-webkit-scrollbar-track {
  border-radius: 14px;
  background-color: #dfe9eb6a;
  border: 1px outset #ffffff81;
  cursor: pointer;
}

.vavascrollbar::-webkit-scrollbar-track:hover {
  background-color: #f0fbfd59;
}

.vavascrollbar::-webkit-scrollbar-track:active {
  background-color: #F2FCFF;
}

.vavascrollbar::-webkit-scrollbar-thumb {
  border-radius: 2px;
  background-color: #eda909;
  border: 1px outset #ffffff7e;
}

.vavascrollbar::-webkit-scrollbar-thumb:hover {
  background-color: #eda909;
}

.vavascrollbar::-webkit-scrollbar-thumb:active {
  background-color: #eda909;
  
}
